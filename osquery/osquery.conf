{
  "options": {
    "logger_plugin": "filesystem",
    "logger_path": "/home/kali/Desktop/NIDS/osquery/logs",
    "logger_mode": "0640",
    "database_path": "/home/kali/Desktop/NIDS/osquery/state/osquery.db",
    "pidfile": "/home/kali/Desktop/NIDS/osquery/state/osquery.pid",
    "extensions_socket": "/home/kali/Desktop/NIDS/osquery/state/osquery.em"
  },
  "schedule": {
    "system_info": {
      "query": "SELECT hostname, cpu_brand, physical_memory, hardware_vendor, hardware_model FROM system_info;",
      "interval": 3600
    },
    "users": {
      "query": "SELECT username, description, directory, shell FROM users;",
      "interval": 3600
    },
    "listening_ports": {
      "query": "SELECT pid, address, port, protocol FROM listening_ports;",
      "interval": 60
    },
    "processes": {
      "query": "SELECT pid, name, path, parent, cmdline FROM processes WHERE on_disk = 1;",
      "interval": 60
    },
    "reverse_shells": {
      "query": "SELECT pid, name, cmdline FROM processes WHERE cmdline LIKE '%/bin/bash -i%' OR cmdline LIKE '%nc %' OR cmdline LIKE '%python -c%import socket%';",
      "interval": 60
    },
    "suspicious_parents": {
      "query": "SELECT p1.pid, p1.name AS process, p2.name AS parent FROM processes p1 JOIN processes p2 ON p1.parent = p2.pid WHERE p2.name IN ('python3','perl','php','sh');",
      "interval": 60
    },
    "autoruns": {
      "query": "SELECT name, path, args FROM startup_items;",
      "interval": 600
    },
    "persistence": {
      "query": "SELECT * FROM crontab WHERE command LIKE '%/bin/bash%' OR command LIKE '%nc %' OR command LIKE '%curl %' OR command LIKE '%wget %';",
      "interval": 300
    },
    "network_connections": {
      "query": "SELECT pid, local_address, local_port, remote_address, remote_port, state FROM process_open_sockets WHERE state = 'ESTABLISHED';",
      "interval": 60
    },
    "file_integrity": {
      "query": "SELECT * FROM file WHERE path IN ('/etc/passwd','/etc/shadow','/etc/ssh/sshd_config');",
      "interval": 600
    }
  }
}
